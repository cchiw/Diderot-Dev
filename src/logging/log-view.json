/* log-events.json
 *
 * This code is part of the Diderot Project (http://diderot-language.cs.uchicago.edu)
 *
 * This code was ported from the Manticore project (http://manticore.cs.uchicago.edu)
 *
 * COPYRIGHT (c) 2016 The University of Chicago
 * All rights reserved.
 *
 * This file describes a "semantics" of the events that can be logged by the Manticore
 * system.  It is used by viewing programs to provide structure to the log files.
 *
 * The file is a single JSON object with three fields:
 *
 *	date	-- a string representing the YYYYMMDD date as a hexadecimal literal.
 *
 *	version	-- an array of three integers representing the major, minor, and patch-level
 *		   version numbers of the file.  The version numbers should be increased as
 *		   follows:
 *			-- increase the patch number when changing the description of an event or
 *			   argument, or changing the group structure.
 *			-- increase the minor-version number when adding new events to the end of
 *			   the file.  Such changes should not effect existing logs with the same
 *			   major-version number.
 *			-- increase the major version number when changing the order of events,
 *			   or changing the order, number, or type of arguments of existing events.
 *
 *	root	-- the root event group
 *
 * All groups have the following two fields:
 *
 *	desc	-- English-language description of group
 *
 *	kind	-- one of
 *			"GROUP"		-- group of events and groups
 *			"STATE"		-- state group
 *			"INTERVAL"	-- interval event group
 *			"DEPENDENT"	-- dependent event group
 *
 * If the kind field is "GROUP", then there are two additional fields:
 *
 *	events	-- an array of event descriptors.
 *
 *	groups	-- an array of subgroups.
 *
 * If the kind field is "STATE", then there are three or four additional fields:
 *
 *	start   -- the initial state
 *
 *	states	-- an array of state names.
 *
 *	colors  -- an optional array of colors; one per state.  Colors are
 *		   specified using the syntax "#rrggbb" or "#rrggbbaa", where
 *		   the rr, gg, bb, and aa are two-digit hex numbers.
 *
 *	transitions
 *		-- an array of transitions, which are event name/state name pairs
 *
 * If the kind field is "INTERVAL", then there are three additional fields:
 *
 *	start	-- the start of the interval
 *
 *	end	-- the end of the interval
 *
 *	color	-- an optional color specification
 *
 * If the kind field is "DEPENDENT", then there are two additional fields:
 *
 *	src	-- the source of the dependent event
 *
 *	dst	-- the destination of the interval
 *
 *	color	-- an optional color specification
 */
{
  "date" : "0x20161219",
  "version" : [1, 0, 0],
  "root" : {
      "desc" : "All events",
      "kind" : "GROUP",
      "events" : [ "NoEvent" ],
      "groups" : [
	  { "desc" : "Scheduler events",
	    "kind" : "GROUP",
	    "events" : [ "SchedulerStart", "SchedulerShutdown" ],
	    "groups" : []
	  },
	  { "desc" : "Worker events",
	    "kind" : "GROUP",
	    "events" : [
		"WorkerStart", "WorkerExit", "GetStrandBlock", "GotStrandBlock", "NoStrandBlock"
	      ],
	    "groups" : []
	  },
	  { "desc" : "Worker-gate synchronization events",
	    "kind" : "GROUP",
	    "events" : [
		"WorkerGateWait", "ControllerGateWait", "GateReleaseWorkers",
		"WorkerGateResume", "ControllerGateResume"
	      ],
	    "groups" : []
	  },
	  { "desc" : "Barrier synchronization events",
	    "kind" : "GROUP",
	    "events" : [
		"BarrierWait", "BarrierResume"
	      ],
	    "groups" : []
	  },
	  { "desc" : "KD-Tree Events",
	    "kind" : "GROUP",
	    "events" : [
		"KDTreeRebuildStart", "KDTreeRebuildDone"
	      ],
	    "groups" : []
	  },
	  { "desc" : "Strand Events",
	    "kind" : "GROUP",
	    "events" : [
		"StrandStart", "StrandUpdate", "StrandDie", "StrandStabilize"
	      ],
	    "groups" : []
	  }
	]
    }
}
